/// Clamp `$number` between `$min` and `$max`
/// @param {Number} $number - Number to clamp
/// @param {Number} $min - Minimum value
/// @param {Number} $max - Maximum value
/// @return {Number}
@function clamp($number, $min, $max) {
  @return min(max($number, $min), $max);
}


/// make-shadow add a show effect to a block. 
/// @param {Number} $multiplier - expands drop effect of the shadow
/// @param {String} $type - accepts `drop` , and `inset`
/// @param {Hex} $color - Color of the Shadow
/// @param {Number} $alpha -Number between 0 - 1 to set the alpha of the shadow
/// @return {style definision}  
@function make-shadow(
	$multiplier: 1,
	$type:"drop",
	$color:#000,
	$alpha:.1,
	){
	$shadow-type: "";
	@if $type == "drop"{ $shadow-type: '';}@else{ $shadow-type:'inset';}
	$horizontal-shift:$multiplier * .5px;
	$vertical-shift:$multiplier * .5px;
	$blur:$multiplier * 2px;
	$spread:$multiplier * .25px;
	@return #{$shadow-type} #{$horizontal-shift} #{$vertical-shift} #{$blur} #{$spread} rgba(red($color),green($color),blue($color),$alpha);
}

/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}


/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-style-get($map, $keys, $term) {
    $return: map-get(map-get($map, $key),$term);
    @debug $return;
    @return return;
}



/// css-shortname
/// @author Matt Watier
/// @access public
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function get-css-shortname($key,$style-list:$style-definition) { 
    @return  map-style-get($style-list, $key, short-name);
}

/// css-longname
/// @author Matt Watier
/// @access public
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function get-css-longname($key, $style-list:$style-definition) { 
    @return  map-style-get($style-list, $key, long-name);
}

/// css-style
/// @author Matt Watier
/// @access public
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function get-css-style($key) {
    @return  map-style-get($style-definition, $key, css-style);
}
